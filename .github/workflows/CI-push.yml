name: CI-push

on:
  push:
    branches:
      - main
    # paths:
    #   - ".github/workflows/**"
    #   - "crates/**"
    #   - "examples/**"
    #   - "Cargo.lock"
    #   - "Cargo.toml"

  merge_group:
    types:
      - checks_requested

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install Rust
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        shell: bash
        run: cargo +nightly fmt --all --check

  check-msrv:
    name: Check compilation on MSRV toolchain
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: true
      matrix:
        os:
          - ubuntu-latest
        # - macos-latest
        # - windows-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install mold linker
        uses: rui314/setup-mold@6bebc01caac32fb5251ee64f60cea0322d0e6574 # v1
        if: ${{ runner.os == 'Linux' }}
        with:
          make-default: true

      - name: Get rust version from Cargo.toml
        shell: bash
        run: |
          rust_version=$(yq -oy '.workspace.package.rust-version' Cargo.toml)
          echo "rust_version=${rust_version}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: "${{ env.rust_version }}"

      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2.7.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      - name: Install cargo-hack
        uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
        with:
          crate: cargo-hack

      - name: Deny warnings
        shell: bash
        run: sed -i 's/rustflags = \[/rustflags = \[\n    "-Dwarnings",/' .cargo/config.toml

      - name: Cargo hack
        if: ${{ github.event_name == 'push' }}
        shell: bash
        run: cargo hack check --workspace --each-feature --all-targets

      - name: Cargo build release
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: cargo check --features "release"

  # cargo-deny:
  #   name: Run cargo-deny
  #   runs-on: ubuntu-latest
  #   strategy:
  #     matrix:
  #       checks:
  #         - advisories
  #         - bans licenses sources

  #   # Prevent sudden announcement of a new advisory from failing CI
  #   continue-on-error: ${{ matrix.checks == 'advisories' }}

  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

  #     - name: Run cargo-deny
  #       uses: EmbarkStudios/cargo-deny-action@v1.3.2
  #       with:
  #         command: check ${{ matrix.checks }}

  test:
    name: Run tests on stable toolchain
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
        # - macos-latest
        # - windows-latest

    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Install mold linker
        uses: rui314/setup-mold@6bebc01caac32fb5251ee64f60cea0322d0e6574 # v1
        if: ${{ runner.os == 'Linux' }}
        with:
          make-default: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@be73d7920c329f220ce78e0234b8f96b7ae60248 # master
        with:
          toolchain: stable 2 weeks ago
          components: clippy

      - name: Install cargo-hack
        uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
        with:
          crate: cargo-hack

      # - name: Install cargo-nextest
      #   uses: baptiste0928/cargo-install@21a18ba3bf4a184d1804e8b759930d3471b1c941 # v2.2.0
      #   with:
      #     crate: cargo-nextest

      - uses: Swatinem/rust-cache@a95ba195448af2da9b00fb742d14ffaaf3c21f43 # v2.7.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      # - name: Setup Embark Studios lint rules
      #   shell: bash
      #   run: |
      #     mkdir -p .cargo
      #     curl -sL https://raw.githubusercontent.com/EmbarkStudios/rust-ecosystem/main/lints.toml >> .cargo/config.toml

      - name: Deny warnings
        shell: bash
        run: sed -i 's/rustflags = \[/rustflags = \[\n    "-Dwarnings",/' .cargo/config.toml

      - name: Run clippy
        shell: bash
        run: cargo clippy --all-features --all-targets

      - name: Cargo hack
        if: ${{ github.event_name == 'push' }}
        shell: bash
        run: cargo hack check --workspace --each-feature --all-targets

      - name: Cargo build release
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: cargo check --features "release"

  typos:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - name: Harden Runner
        uses: step-security/harden-runner@63c24ba6bd7ba022e95695ff85de572c04a18142 # v2.7.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1

      - name: Spell check
        uses: crate-ci/typos@6233184298a40671ccdd63744fce6209c38df06d # master
